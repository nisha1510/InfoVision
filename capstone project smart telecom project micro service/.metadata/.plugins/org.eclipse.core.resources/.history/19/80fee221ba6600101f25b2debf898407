package com.auth.service.serviceImpl;

import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.stereotype.Service;
import com.auth.service.entity.User;
import com.auth.service.repository.UserRepository;
import com.auth.service.services.UserService;

@Service
public class UserServiceImpl implements UserService {

	@Autowired
	private UserRepository userRepository;
	
	@Autowired
    private JwtTokenUtil jwtUtil;

	public User register(User user) {
        user.setId(UUID.randomUUID().toString());
        user.setPassword(new BCryptPasswordEncoder().encode(user.getPassword()));
        return userRepository.save(user);
    }

	public String login(String username, String rawPassword) {
        User user = userRepository.findByUsername(username)
            .orElseThrow(() -> new AuthException("Invalid username"));

        boolean match = new BCryptPasswordEncoder().matches(rawPassword, user.getPassword());
        if (!match) throw new AuthException("Invalid password");

        return jwtUtil.generateToken(user.getUsername(), user.getRole());
    }
}
