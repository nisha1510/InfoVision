package com.smarttelecom.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.smarttelecom.dto.PlanDTO;
import com.smarttelecom.entity.Plan;
import com.smarttelecom.repository.PlanRepository;
import com.smarttelecom.serviceImpl.PlanServiceImpl;

import jakarta.validation.Valid;

@RestController
@RequestMapping("/plans")
public class PlanController {

    @Autowired 
    private PlanServiceImpl serviceimpl;
 
    @Autowired
    private PlanRepository repo;

    @PreAuthorize("hasRole('ADMIN')")
    @PostMapping
    public ResponseEntity<PlanDTO> create(@RequestBody @Valid PlanDTO dto) {
        return ResponseEntity.status(HttpStatus.CREATED).body(serviceimpl.createPlan(dto));
    }

    @PreAuthorize("hasRole('ADMIN')")
    @GetMapping
    public ResponseEntity<List<PlanDTO>> getAll() {
        return ResponseEntity.ok(serviceimpl.getAllPlans());
    }

    @GetMapping("/type/{type}")
    public ResponseEntity<List<PlanDTO>> getByType(@PathVariable String type) {
        return ResponseEntity.ok(serviceimpl.getPlansByType(type));
    }

    @GetMapping("/sorted")
    public ResponseEntity<List<PlanDTO>> getSorted() {
        return ResponseEntity.ok(serviceimpl.getSortedPlans());
    }
    
    @GetMapping("/{id}")
    public ResponseEntity<PlanDTO> getPlanById(@PathVariable String id) {
        Plan plan = repo.findById(id).orElseThrow(() -> new RuntimeException("Plan not found"));

        PlanDTO dto = new PlanDTO();
        dto.setId(plan.getId());
        dto.setName(plan.getName());
        dto.setType(plan.getType());
        dto.setPrice(plan.getPrice());
        dto.setValidity(plan.getValidity());
        dto.setFeatures(plan.getFeatures());

        return ResponseEntity.ok(dto);
    }

}
